#!/bin/bash

SCRIPT_DIR=$(git -C "$(dirname "$0")" rev-parse --show-toplevel)
BUILD_ARTIFACTS_FOLDER_PATH="$SCRIPT_DIR/infrastructure/packer/build_artifacts"

declare -A constants=(
  [AWS_EC2_SSH_CONNECTION_USER]="root"
  [AWS_EC2_SSH_CONNECTION_PORT]="936"
)

declare -A variables=(
  [AWS_ACCESS_KEY_ID]="$(aws configure get aws_access_key_id)"
  [AWS_SECRET_ACCESS_KEY]="$(aws configure get aws_secret_access_key)"
  [AWS_REGION]="$(aws configure get region)"
  [AWS_ECR_REPOSITORY_NAME]="app"
  [AWS_AMI_IMAGE_PREFIX]="app_base"
  [ACME_EMAIL]="user@example.com"
)

update_variables() {
  key=$1
  current_value=${variables[$key]}
  input=""

  printf "Enter a new value for %s (leave blank to keep existing value: %s):\n" "$key" "$current_value"
  read input

  # Use the existing value if the user did not input a string
  if [ -z "$input" ]; then
    variables[$key]=$current_value
  else
    variables[$key]=$input
  fi
}

for key in "${!variables[@]}"; do
  update_variables "$key"
done

printf "User Inputs:\n"
for key in "${!variables[@]}"; do
  printf "Value for %s: %s\n" "$key" "${variables[$key]}"
done

printf "Constants:\n"
for key in "${!constants[@]}"; do
  printf "Value for %s: %s\n" "$key" "${constants[$key]}"
done

echo "Creating build_artifacts path '$BUILD_ARTIFACTS_FOLDER_PATH'"
mkdir -p $BUILD_ARTIFACTS_FOLDER_PATH

AWS_CONFIG_FOLDER_PATH="$BUILD_ARTIFACTS_FOLDER_PATH/.aws"
echo "Creating '$BUILD_ARTIFACTS_FOLDER_PATH/.aws' folder"
mkdir -p $AWS_CONFIG_FOLDER_PATH

AUTO_GENERATION_HINT="# CAREFUL: this file is auto-generated by initial_script.sh"
echo "Creating variable '$BUILD_ARTIFACTS_FOLDER_PATH/variables.pkrvars.hcl' file for packer"
cat > $BUILD_ARTIFACTS_FOLDER_PATH/variables.pkrvars.hcl << EOF
$AUTO_GENERATION_HINT
aws_access_key_id = "${variables[AWS_ACCESS_KEY_ID]}"
aws_secret_access_key = "${variables[AWS_SECRET_ACCESS_KEY]}"
aws_region = "${variables[AWS_REGION]}"
aws_ami_image_prefix = "${variables[AWS_AMI_IMAGE_PREFIX]}"
EOF

# This could be refactored to be an IAM only available for ECR pulling images
# split EC2 and Build credentials
echo "Creating '$BUILD_ARTIFACTS_FOLDER_PATH/.aws/credentials' file for EC2"
cat > $AWS_CONFIG_FOLDER_PATH/credentials << EOF
$AUTO_GENERATION_HINT
[default]
aws_access_key_id=${variables[AWS_ACCESS_KEY_ID]}
aws_secret_access_key=${variables[AWS_SECRET_ACCESS_KEY]}
EOF

echo "Creating '$BUILD_ARTIFACTS_FOLDER_PATH/.aws/config' file for EC2"
cat > $AWS_CONFIG_FOLDER_PATH/config << EOF
$AUTO_GENERATION_HINT
[default]
region=${variables[AWS_REGION]}
output=json
EOF

echo "Creating ssh key '$BUILD_ARTIFACTS_FOLDER_PATH/.github-action-user' for github-action user"
SSH_KEY="$BUILD_ARTIFACTS_FOLDER_PATH/.github-action-user"
yes "" | ssh-keygen -q -t ed25519 -N "" -C "user@github-action.com" -f $SSH_KEY >/dev/null
SSH_KEY_GITHUB_ACTION_USER=$(<"$SSH_KEY")

echo "Creating authorized_keys file '$BUILD_ARTIFACTS_FOLDER_PATH/authorized_keys' for EC2 ssh connections"
AUTHORIZED_SSH_KEYS="$BUILD_ARTIFACTS_FOLDER_PATH/authorized_keys"
>$AUTHORIZED_SSH_KEYS
cat "$SSH_KEY.pub" >> "$AUTHORIZED_SSH_KEYS"
cat "$HOME/.ssh/id_rsa.pub" >> "$AUTHORIZED_SSH_KEYS"

echo "Creating packer ansible variables file '$BUILD_ARTIFACTS_FOLDER_PATH/playbook_variables.yml'"
PLAYBOOK_VARIABLES=$BUILD_ARTIFACTS_FOLDER_PATH/playbook_variables.yml
cat > $PLAYBOOK_VARIABLES << EOF
$AUTO_GENERATION_HINT
---
EOF
for key in "${!constants[@]}"; do
  echo "${key}: ${constants[$key]}" >> $PLAYBOOK_VARIABLES
done

echo "Creating terraform variables file '$BUILD_ARTIFACTS_FOLDER_PATH/terraform_variables.auto.tfvars'"
cat > $BUILD_ARTIFACTS_FOLDER_PATH/terraform_variables.auto.tfvars << EOF
$AUTO_GENERATION_HINT
aws_ami_image_prefix    = "${variables[AWS_AMI_IMAGE_PREFIX]}"
aws_ecr_repository_name = "${variables[AWS_ECR_REPOSITORY_NAME]}"
EOF

echo "Setting github repository secrets and variables for github actions"
gh secret set SSH_KEY --body "$SSH_KEY_GITHUB_ACTION_USER"
gh secret set SSH_PORT --body "${constants[AWS_EC2_SSH_CONNECTION_PORT]}"
gh secret set SSH_USER --body "${constants[AWS_EC2_SSH_CONNECTION_USER]}"
gh secret set AWS_ACCESS_KEY_ID --body "${variables[AWS_ACCESS_KEY_ID]}"
gh secret set AWS_SECRET_ACCESS_KEY --body "${variables[AWS_SECRET_ACCESS_KEY]}"
gh variable set AWS_REGION --body "${variables[AWS_REGION]}"
gh variable set AWS_ECR_REPOSITORY_NAME --body "${variables[AWS_ECR_REPOSITORY_NAME]}"
gh variable set ACME_EMAIL --body "${variables[ACME_EMAIL]}"
# gh secret set SSH_IP --body "3.78.84.52"

# TODO: split aws credentials in 2 parts:
# 1. build_artifacts aws credentials (used for packer/terraform to create everyhing
# 2. aws credentials for github action (push docker image to ECR) + on EC2 instance (login periodically on ECR and pull image)
# remove SSH_KEY github-action user files
# 3. Set up custom SSH Port and append to pkvars.hcl, tfvars and in github action
# 4. Public IP from terraform apply should be used in github action (or maybe use domain?)
# 5. AWS ECR Repository Name read from Terraform file
